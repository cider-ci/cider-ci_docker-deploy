### git checkout ##############################################################

- assert:
    that: git_checkout_target_path is defined

- assert:
    that: git_checkout_repo is defined

- name: Create target dir
  file:
    path: "{{git_checkout_target_path}}"
    owner: root
    group: root
    state: directory
    recurse: true
    mode: 0755

- name: 'register: is (already) a valid git repo?'
  stat:
    path: "{{git_checkout_target_path}}/.git"
  register: git_checkout_target_stat

- name: Set origin
  shell: cd  {{git_checkout_target_path}}  && git remote set-url origin {{git_checkout_repo}}
  changed_when: False
  when: git_checkout_target_stat.stat.exists

- name: Initial Clone
  shell: git clone {{git_checkout_repo}} {{git_checkout_target_path}}
  when: not git_checkout_target_stat.stat.exists

- name: Fetch and checkout
  shell: |
    set -eux
    cd {{git_checkout_target_path}}
    git fetch --tags --all
    git reset --hard {{git_checkout_version}} --
    git clean --force -fd
  register: git_update
  ignore_errors: true

- set_fact:
    git_checkout_clean_slate: true
  when: git_update.rc != 0

- name: Update submodules
  shell: |
    set -eux
    cd {{git_checkout_target_path}}
    git submodule foreach --recursive 'git reset --hard HEAD --'
    git submodule sync --recursive
    git submodule update --init --recursive
  when: not git_checkout_clean_slate
  register: git_update_submodules
  ignore_errors: true

- set_fact:
    git_checkout_clean_slate: true
  when: (not git_checkout_clean_slate) and (git_update_submodules.rc != 0)


### clean slate / fallback ####################################################

- name: Clean slate
  shell: rm -rf {{git_checkout_target_path}}
  when: git_checkout_clean_slate

- name: Fallback clone
  shell: git clone {{git_checkout_repo}} {{git_checkout_target_path}}
  when: git_checkout_clean_slate

- name: Fallback fetch and checkout
  shell: |
    set -eux
    cd {{git_checkout_target_path}}
    git fetch --tags --all
    git reset --hard {{git_checkout_version}} --
    git clean --force -fd
  when: git_checkout_clean_slate

- name: Fallback update submodules
  shell: |
    set -eux
    cd {{git_checkout_target_path}}
    git submodule update --init --recursive
  when: git_checkout_clean_slate

- name: Change owner
  file:
    path: "{{git_checkout_target_path}}"
    owner: "{{git_checkout_owner}}"
    group: "{{git_checkout_owner}}"
    state: directory
    recurse: true
    mode: 0755

